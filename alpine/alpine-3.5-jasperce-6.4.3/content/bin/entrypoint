#!/bin/bash -e


# Add Custom UserID as "User" User
if [ "$(id -u)" != "0" ]; then
  sed "s/^user:\(.*\):[0-9]\+:\([0-9]\+\):.*:\(.*:.*\)/user:\1:$(id -u):\2:User:\3/g" < /etc/passwd > /tmp/passwd \
  && cat /tmp/passwd > /etc/passwd \
  && rm -f /tmp/passwd
fi


# Prepare etc directory due to volume
if [ ! -d /var/www/data/etc ]; then
  mkdir -p /var/www/data/etc \
  && chown user:root /var/www/data/etc \
  && chmod 775 /var/www/data/etc \
  && cp -R /usr/local/docker/etc/* /var/www/data/etc/
fi


# Prepare etc/tomcat directory due to volume
if [ ! -d /var/www/data/etc/tomcat ]; then
  mkdir -p /var/www/data/etc/tomcat \
  && chown user:root /var/www/data/etc/tomcat \
  && chmod 775 /var/www/data/etc/tomcat \
  && cp -R /usr/local/docker/etc/tomcat/* /var/www/data/etc/tomcat/
fi


# Prepare lib/tomcat directory due to volume
if [ ! -d /var/www/data/lib/tomcat ]; then
  mkdir -p /var/www/data/lib/tomcat \
  && chown user:root /var/www/data/lib/tomcat \
  && chmod 775 /var/www/data/lib/tomcat \
  && cp -R /usr/local/docker/lib/tomcat/* /var/www/data/lib/tomcat/
fi


# Prepare logs directory due to volume
if [ ! -d /var/www/data/logs ]; then
  mkdir -p /var/www/data/logs \
  && chown user:root /var/www/data/logs \
  && chmod 775 /var/www/data/logs
fi


# Prepare logs/tomcat directory due to volume
if [ ! -d /var/www/data/logs/tomcat ]; then
  mkdir -p /var/www/data/logs/tomcat \
  && chown user:root /var/www/data/logs/tomcat \
  && chmod 775 /var/www/data/logs/tomcat
fi


# Prepare web/jasperserver due to volume
jasperserver_setup() {
  JS_DB_TYPE=${JS_DB_TYPE:-mysql}
  JS_DB_HOST=${JS_DB_HOST:-127.0.0.1}
  JS_DB_PORT=${JS_DB_PORT:-3306}
  JS_DB_ROOT_USER=${JS_DB_ROOT_USER:-root}
  JS_DB_ROOT_PASSWORD=${JS_DB_ROOT_PASSWORD:-root}
  
  JS_WEB_DEPLOYMENT_URI=${JS_WEB_DEPLOYMENT_URI:-http://127.0.0.1:8080/}
  JS_ENABLE_SAVE_TO_HOST_FS=${JS_ENABLE_SAVE_TO_HOST_FS:-false}

  cd ${JS_BUILD} \
  && cp sample_conf/${JS_DB_TYPE}_master.properties default_master.properties \
  && sed -i -e "s|^appServerDir.*$|appServerDir = $CATALINA_HOME|g; s|^dbHost.*$|dbHost=$JS_DB_HOST|g; s|^dbUsername.*$|dbUsername=$JS_DB_ROOT_USER|g; s|^dbPassword.*$|dbPassword=$JS_DB_ROOT_PASSWORD|g" default_master.properties \
  && sed -i -e "s|^# quartz\.web\.deployment\.uri.*$|quartz.web.deployment.uri = $JS_WEB_DEPLOYMENT_URI|g" default_master.properties

  ./js-ant create-js-db init-js-db-ce import-minimal-ce || true
  for i in $@; do
      ./js-ant $i
  done

  if [ "${JS_ENABLE_SAVE_TO_HOST_FS}" = "true" ]; then
    sed -i "s/\(<property name=\"enableSaveToHostFS\" value=\"\).*\(\"\/>\)/\1${JS_ENABLE_SAVE_TO_HOST_FS}\2/" /var/www/data/web/jasperserver/WEB-INF/applicationContext.xml
  fi

  mv /var/www/data/web/jasperserver /var/www/data/web/ROOT \
  && sed -i "s/jasperserver\.root/ROOT.root/g" /var/www/data/web/ROOT/WEB-INF/web.xml \
  && sed -i "s/jasperserver\.root/ROOT.root/g" /var/www/data/web/ROOT/WEB-INF/log4j.properties \
  && echo "tbeller.usejndi=false" >> /var/www/data/web/ROOT/WEB-INF/classes/resfactory.properties \
  && touch /var/www/data/web/jasperserver
}


# Prepare web directory due to volume
if [ ! -d /var/www/data/web ]; then
  mkdir -p /var/www/data/web \
  && chown user:root /var/www/data/web \
  && chmod 775 /var/www/data/web
fi
if [ "$(ls -A /var/www/data/web)" ]; then
  :
else
  if [ ! -f "/var/www/data/web/jasperserver" ]; then
    jasperserver_setup deploy-webapp-ce
  fi
fi


# Prepare JasperReports Server configuration
export CATALINA_OPTS="${CATALINA_OPTS} -Xmx${JS_XMX} -XX:MaxPermSize=${JS_MAXPERMSIZE} ${JS_CATALINA_OPTS}"


# Execute Everything from Entries
exec "$@"
